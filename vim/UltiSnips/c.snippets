
global !p
import os
endglobal
###########################################################################
#                            TextMate Snippets                            #
###########################################################################
snippet hdr "header"
/*
 * =====================================================================
 *      Project :  `!p snip.rv = os.path.basename(os.getcwd())`
 *      File    :  `!p snip.rv = snip.fn`
 *      Created :  `!v strftime("%x")` `!v strftime("%X")` `!v strftime("%z")`
 *      Author  :  `!v g:snips_author`
 *      Company :  `!v g:snips_company`
 * =====================================================================
 */

endsnippet

snippet hdrca "header-cpp-apache"
/*
* ---------------------------------------------------------------------------
*       Project :  `!p snip.rv = os.path.basename(os.getcwd())`
*       File    :  `!p snip.rv = snip.fn`
*       Created :  `!v strftime("%x")` `!v strftime("%X")` `!v strftime("%z")`
*       Author  :  `!v g:snips_author`
*       Company :  `!v g:snips_company`
* ---------------------------------------------------------------------------
*  Copyright (c) `!v strftime("%Y")` `!v g:snips_author`
*
*  Licensed under the Apache License, Version 2.0 (the "License");
*  you may not use this file except in compliance with the License.
*  You may obtain a copy of the License at
*
*  http://www.apache.org/licenses/LICENSE-2.0
*
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*  See the License for the specific language governing permissions and
*  limitations under the License.
* ===========================================================================
*/

endsnippet

snippet hdrcm "header-cpp-mit"
/*
* ---------------------------------------------------------------------------
*       Project :  `!p snip.rv = os.path.basename(os.getcwd())`
*       File    :  `!p snip.rv = snip.fn`
*       Created :  `!v strftime("%x")` `!v strftime("%X")` `!v strftime("%z")`
*       Author  :  `!v g:snips_author`
*       Company :  `!v g:snips_company`
* ---------------------------------------------------------------------------
*  Copyright (c) `!v strftime("%Y")` `!v g:snips_author`
*
*  Permission is hereby granted, free of charge, to any person obtaining a copy
*  of this software and associated documentation files (the "Software"), to deal
*  in the Software without restriction, including without limitation the rights
*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
*  copies of the Software, and to permit persons to whom the Software is
*  furnished to do so, subject to the following conditions:
*
*  The above copyright notice and this permission notice shall be included in all
*  copies or substantial portions of the Software.
*
*  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
*  SOFTWARE.
* ===========================================================================
*/

endsnippet

snippet guards "include guards"
#ifndef `!p snip.rv = snip.fn.upper().replace('-','_').replace('.','_')`
#define `!p snip.rv = snip.fn.upper().replace('-','_').replace('.','_')`

#endif //`!p snip.rv = snip.fn.upper().replace('-','_').replace('.','_')`

endsnippet

snippet inc "#include <> (inc)" !
#include <${1:.h}>
endsnippet

snippet Inc "#include local header (Inc)" !
#include "${1:`!p snip.rv = snip.basename + '.h'`}"
endsnippet

snippet main "main() (main)" !
int main(int argc, char *argv[])
{
	${0:/* code */}
	return 0;
}
endsnippet

snippet for "for int loop (fori)" !
for (${4:size_t} ${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
	${0:/* code */}
}
endsnippet

snippet if "if .. (if)" !
if (${1:/* condition */}) {
	${0:/* code */}
}
endsnippet

snippet ife "if .. else"
if (${1:/* condition */}) {
	${0:/* code */}
}
else {

}
endsnippet

snippet elif "else if"
else if (${1:/* condition */}) {
	${0:/* code */}
}
endsnippet

# vim:ft=snippets:
